price <- gsub("  ","",price)
price <- price[2:71]
price
price <- gsub("<.*?>|\r|\n|\t|&nbsp","", price)
price <- gsub("  ","",price)
price <- gsub("만원|,","",price)
price <- price[2:71]
price
price <- gsub("<.*?>|\r|\n|\t|&nbsp","", price)
price <- gsub("  ","",price)
price <- gsub("만원|,","",price)
price <- price[2:71]
price
readPage %>% html_nodes(".mode-cell.price") -> price
library("stringr")
library("dplyr")
library("rvest")
library("httr")
readPage %>% html_nodes(".mode-cell.price") -> price
readPage %>% html_nodes(".mode-cell.price") -> price
url <- "https://www.bobaedream.co.kr/cyber/CyberCar.php?sel_m_gubun=ALL&maker_no=49&group_no=5&page=1&order=S11&view_size=70"
readPage <- read_html(url,encoding="utf-8")
readPage %>% html_nodes("li.product-item") -> data
readPage %>% html_nodes(".tit > a") %>% html_attr("title") -> title
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
readPage %>% html_nodes(".mode-cell.fuel > .text") %>% html_text() -> fuel
readPage %>% html_nodes(".mode-cell.km > .text") %>% html_text() -> km
readPage %>% html_nodes(".mode-cell.price") -> price
price <- gsub("<.*?>|\r|\n|\t|&nbsp","", price)
price <- gsub("  ","",price)
price <- gsub("만원|,","",price)
price <- price[2:71]
price
result <- data.frame(title,year,fuel,km,price)
result
prepro <- result[!(result$price == "팔림"),]
prepro <- prepro[!(prepro$price == "계약"),]
prepro <- prepro[!(prepro$price == "할부"),]
prepro <- prepro[!(prepro$price == "운용리스"),]
prepro
View(prepro)
price <- gsub("(.*?)","", price)
price
year
year <- gsub("(.*?)","", price)
year
year
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
year <- gsub("(.*?)","", year)
year
year <- gsub("(.*?)","", year)
year
gsub("(.*?)","", year)
gsub("(|)","", year)
gsub("(|)","", year)
gsub("(","", year)
gsub("(.*","", year)
gsub("\(.*?\)","", year)
gsub("\\(.*?\\)","", year)
as.Date(year)
as.Date(year,'%y/%m')
as.Date(year,'%Y/%m')
as.Date(year,'%Y/%m')
as.Date(year,'%Y/%m')
year <- as.Date(year)
as.Date(year,'%Y/%m')
year <- gsub("\\(.*?\\)","", year)
as.Date(year,'%Y/%m')
year
year <- paste("20",year)
year
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
year <- gsub("\\(.*?\\)","", year)
year <- paste("20",year, collapse = "")
year
year <- paste("20",year)
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
year <- gsub("\\(.*?\\)","", year)
year <- paste("20",year)
year
readPage %>% html_nodes(".mode-cell.price") -> price
price <- gsub("<.*?>|\r|\n|\t|&nbsp;","", price)
price <- gsub("  ","",price)
price <- gsub("만원|,","",price)
price <- price[2:71]
price
url <- "https://www.bobaedream.co.kr/cyber/CyberCar.php?sel_m_gubun=ALL&maker_no=49&group_no=5&page=1&order=S11&view_size=70"
readPage <- read_html(url,encoding="utf-8")
readPage %>% html_nodes("li.product-item") -> data
readPage %>% html_nodes(".tit > a") %>% html_attr("title") -> title
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
year <- paste("20",year)
year <- gsub("\\(.*?\\)|&nbsp;","", year)
year
year <- gsub("\\(.*?\\)|&nbsp","", year)
year
year <- gsub("\\(.*?\\)|&nbsp;| ","", year)
year
as.Date(year,'%Y/%m')
as.Date(year,'%Y/%m')
readPage %>% html_nodes(".mode-cell.fuel > .text") %>% html_text() -> fuel
fuel
readPage %>% html_nodes(".mode-cell.km > .text") %>% html_text() -> km
km <- gsub("천","1000",km)
km <- gsub("만","10000",km)
km
km <- gsub("km","",km)
km
readPage %>% html_nodes(".mode-cell.km > .text") %>% html_text() -> km
km <- gsub("천","000",km)
km <- gsub("만","0000",km)
km <- gsub("km","",km)
km
year
as.Date(year,'%Y/%m')
as.Date(year,'%Y/%m')
as.Date('2020/01','%Y/%m')
as.Date('2020/01','%Y/%m')
as.Date('2020/01',format='%Y/%m')
as.Date('2020/01',format='%Y%m')
as.Date('2020/01',format='%Y-%m')
as.Date('2020/01',format='%Y/%m')
as.Date('2020',format='%Y')
as.Date('2020',format='%Y')
as.Date('2020/02',format='%Y')
as.Date('2020/02',format='%Y/%m')
as.Date('2020/02',format='%Y/%m/%d')
as.Date('2020/02/24',format='%Y/%m/%d')
as.Date('2020/02/24',format='%m')
as.Date('2020/02/24',format='/%m')
as.Date('2020/02/24',format='/%m/')
as.Date('2020/02/24',format='%Y')
as.Date('2020/02/24',format='%Ym')
as.Date('2020/02/24',format='%Ymm')
as.Date('2020/02/24',format='%Y/mm')
as.Date('2020/02/24',format='%YYYY/mm')
as.Date('2020/02/24',format='%YYYY/%mm')
as.Date('2020/02/24',format='%YYYY/%mm/%dd')
as.Date('2020/02/24',format='%Y/%m/%d')
as.Date(year,'%Y/%m')
year
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> old
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
gsub("/.*?",year)
gsub("/.*?","",year)
readPage %>% html_nodes(".tit > a") %>% html_attr("title") -> title
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
year <- paste("20",year)
year <- gsub("\\(.*?\\)|&nbsp;| ","", year)
gsub("/.*?","",year)
gsub("/.*","",year)
month <-
readPage %>% html_nodes(".mode-cell.fuel > .text") %>% html_text() -> fuel
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
year <- paste("20",year)
year <- gsub("\\(.*?\\)|&nbsp;| ","", year)
gsub("/.*","",year)
gsub(".*/","",year)
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
year <- paste("20",year)
year <- gsub("\\(.*?\\)|&nbsp;| ","", year)
year <- gsub("/.*","",year)
month <- gsub(".*/","",year)
year
month
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> year
year <- paste("20",year)
year <- gsub("\\(.*?\\)|&nbsp;| ","", year)
month <- gsub(".*/","",year)
year <- gsub("/.*","",year)
year
month
year <- as.integer(year)
month <- as. integer(month)
month <- as.integer(month)
year
month
date()
date()
date()
as.Date('%Y')
as.Date(,'%Y')
as.Date(date(),'%Y')
as.Date(date(),'%Y/%m')
as.Date(date(),'%Y')
date()
library("lubridate")
year(date)
year(date())
years(date())
`year<-`(date())
url <- "https://www.bobaedream.co.kr/cyber/CyberCar.php?sel_m_gubun=ALL&maker_no=49&group_no=5&page=1&order=S11&view_size=70"
readPage <- read_html(url,encoding="utf-8")
readPage %>% html_nodes("li.product-item") -> data
readPage %>% html_nodes(".tit > a") %>% html_attr("title") -> title
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> yy
yy <- paste("20",yy)
yy <- gsub("\\(.*?\\)|&nbsp;| ","", yy)
mm <- gsub(".*/","",yy)
yy <- gsub("/.*","",yy)
yy <- as.integer(yy)
mm <- as.integer(mm)
year(date())
year(date())
date()
d<-date()
year(d)
d<-now()
year(d)
year(now())
year(now())-yy
yy
# class를 unlist로 변환함
class(unlist(data_list))
year(now())-yy
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> yy
yy
yy <- paste("20",yy)
yy <- gsub("\\(.*?\\)|&nbsp;| ","", yy)
mm <- gsub(".*/","",yy)
yy <- gsub("/.*","",yy)
yy <- as.integer(yy)
mm <- as.integer(mm)
yy
mm
year(now())-yy
(year(now())-yy)*12
month(now())
month(now())-mm
(year(now())-yy)*12 + month(now())-)
(year(now())-yy)*12 + month(now()))
(year(now())-yy)*12 + month(now())
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> yy
yy
(year(now())-yy)*12 + (month(now())-mm)
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> yy
yy <- paste("20",yy)
yy <- gsub("\\(.*?\\)|&nbsp;| ","", yy)
mm <- gsub(".*/","",yy)
yy <- gsub("/.*","",yy)
yy <- as.integer(yy)
mm <- as.integer(mm)
(year(now())-yy)*12 + (month(now())-mm)
readPage %>% html_nodes(".mode-cell.year > .text") %>% html_text() -> yy
yy
old <- (year(now())-yy)*12 + (month(now())-mm)
yy <- paste("20",yy)
yy <- gsub("\\(.*?\\)|&nbsp;| ","", yy)
mm <- gsub(".*/","",yy)
yy <- gsub("/.*","",yy)
yy <- as.integer(yy)
mm <- as.integer(mm)
old <- ((year(now())-yy)*12 + (month(now())-mm))
old
readPage %>% html_nodes(".mode-cell.fuel > .text") %>% html_text() -> fuel
fuel
readPage %>% html_nodes(".mode-cell.km > .text") %>% html_text() -> km
km <- gsub("천","000",km)
km <- gsub("만","0000",km)
km <- gsub("km","",km)
km
readPage %>% html_nodes(".mode-cell.price") -> price
price <- gsub("<.*?>|\r|\n|\t|&nbsp;","", price)
price <- gsub("  ","",price)
price <- gsub("만원|,","",price)
price <- price[2:71]
price
result <- data.frame(title,year,fuel,km,price)
prepro <- result[!(result$price == "팔림"),]
prepro <- prepro[!(prepro$price == "계약"),]
prepro <- prepro[!(prepro$price == "할부"),]
prepro <- prepro[!(prepro$price == "운용리스"),]
prepro
result <- data.frame(title,year,fuel,km,price)
result <- data.frame(title,old,fuel,km,price)
prepro <- result[!(result$price == "팔림"),]
prepro <- prepro[!(prepro$price == "계약"),]
prepro <- prepro[!(prepro$price == "할부"),]
prepro <- prepro[!(prepro$price == "운용리스"),]
prepro
View(prepro)
tablewordlist_result <- tablewordlist[nchar(names(tablewordlist))>1]
load("C:/iot/work/bigdata/Rwork/bigdata/score.RData")
load("C:/iot/work/bigdata/Rwork/bigdata/comments.RData")
sampledata <- comments[1:1000]
data_list = list() # 댓글을 분리하면 분리된 명사의 갯수가 다르므로 리스트를 이용해야 한다.
for(i in 1:length(sampledata)){
data <- SimplePos09(sampledata[i])
data_list[[i]] <- data
}
#/로 분할 - 리스트의 모든 요소에 저장된 문자열을 /로 분리 => N이 있는 문자열의 첫번재 요소 가져오기
# sapply를 이용하면 반복작업을 할 수 있다.
class(data_list)
# class를 unlist로 변환함
class(unlist(data_list))
wordlist <- sapply(str_split(data_list,"/"), function(x){
x[1]
})
#table함수를 이용해서 단어의 빈도수 구하기
tablewordlist <- table(wordlist)
wordlist <- sapply(str_split(data_list,"/"), function(x){
x[1]
})
data_list = list() # 댓글을 분리하면 분리된 명사의 갯수가 다르므로 리스트를 이용해야 한다.
for(i in 1:length(sampledata)){
data <- SimplePos09(sampledata[i])
data_list[[i]] <- data
}
library(stringr)
library(KoNLP)
library(Sejong)
library(hash)
library(rJava)
library(tau)
library(RSQLite)
library(devtools)
useSejongDic()
sampledata <- comments[1:1000]
data_list = list() # 댓글을 분리하면 분리된 명사의 갯수가 다르므로 리스트를 이용해야 한다.
for(i in 1:length(sampledata)){
data <- SimplePos09(sampledata[i])
data_list[[i]] <- data
}
#/로 분할 - 리스트의 모든 요소에 저장된 문자열을 /로 분리 => N이 있는 문자열의 첫번재 요소 가져오기
# sapply를 이용하면 반복작업을 할 수 있다.
class(data_list)
# class를 unlist로 변환함
class(unlist(data_list))
wordlist <- sapply(str_split(data_list,"/"), function(x){
x[1]
})
class(wordlist)
head(wordlist,10)
#table함수를 이용해서 단어의 빈도수 구하기
tablewordlist <- table(wordlist)
tablewordlist[1]
tablewordlist[89]
names(tablewordlist)
sort(tablewordlist,decreasing = T)[1:100]
nchar("글자수")
tablewordlist_result <- tablewordlist[nchar(names(tablewordlist))>1]
tablewordlist_result <- sort(tablewordlist_result,decreasing = -1)
tablewordlist_result <- sort(tablewordlist_result,decreasing = T)
tablewordlist_result
install.packages("wordcloud")
install.packages("RcolorBrewer")
install.packages("RColorBrewer")
library(wordcloud)
library(RColorBrewer)
View(data_list)
#RColorBrewer
display.brewer.all()
View(data_list)
str_split(data_list,"/")
str_split(data_list,"\\")
str_split(data_list,"\\\")
wordlist <- sapply(str_split(data_list,"/"), function(x){
x[1]
})
class(wordlist)
head(wordlist,10)
#table함수를 이용해서 단어의 빈도수 구하기
tablewordlist <- table(wordlist)
tablewordlist[1]
tablewordlist[89]
names(tablewordlist)
sort(tablewordlist,decreasing = T)[1:100]
nchar("글자수")
tablewordlist_result <- tablewordlist[nchar(names(tablewordlist))>1]
tablewordlist_result <- sort(tablewordlist_result,decreasing = T)
tablewordlist_result
#RColorBrewer
display.brewer.all()
data_list
str_split(data_list,"/")
str_split(data_list,"/")[[2]]
str_split(data_list,"/")[2]
str_split(data_list,"/")[1]
str_split(data_list,"/")[[1]]
str_split(data_list,"/")[[2]]
str_split(data_list,"/")[[2][2]]
str_split(data_list,"/")[[2,2]]
wordlist <- sapply(str_split(data_list,"/"), function(x){
x[1]
})
wordlist
wordlist[2]
wordlist[[2]
wordlist[[2]]
wordlist[
wordlist[]
wordlist
wordlist
tablewordlist_result
display.brewer.all(type = "qual")
word <- names(tablewordlist_result)
word <- names(tablewordlist_result)
count <- as.numeric(tablewordlist_result)
word
gsub("list(회사에서 = \\","",wordlist)
gsub("list(회사에서 = \\\\","",wordlist)
gsub("(list(회사에서 = \\)","",wordlist)
gsub("list\(회사에서 = \\","",wordlist)
gsub("list\\(회사에서 = \\","",wordlist)
gsub("list\\(회사에서 = \\","",wordlist)
gsub(".*\\","",wordlist)
gsub("(.*\\)","",wordlist)
gsub("(.*\)","",wordlist)
gsub("(.*\\)","",wordlist)
gsub("(.*?\\)","",wordlist)
gsub("(.*\\ )","",wordlist)
gsub("(.*\"\ )","",wordlist)
gsub("(.*\\\")","",wordlist)
wordlist <- sapply(str_split(data_list,"/"), function(x){
x[1]
})
wordlist <- gsub("(.*\\\")","",wordlist)
#table함수를 이용해서 단어의 빈도수 구하기
tablewordlist <- table(wordlist)
tablewordlist[1]
tablewordlist[89]
names(tablewordlist)
sort(tablewordlist,decreasing = T)[1:100]
nchar("글자수")
tablewordlist_result <- tablewordlist[nchar(names(tablewordlist))>1]
tablewordlist_result <- sort(tablewordlist_result,decreasing = T)
tablewordlist_result
word <- names(tablewordlist_result)
count <- as.numeric(tablewordlist_result)
word
mycolor <- brewer.pal(n=11,name="RdYlGn")
display.brewer.all(type = "qual")
display.brewer.all(type = "seq")
mycolor <- brewer.pal(n=11,name="YlOrRd")
mycolor <- brewer.pal(n=9,name="YlOrRd")
wordcloud(words = word, freq = count, random.order = F, colors = mycolor,scale=c(7,0,3))
display.brewer.all(type = "seq")
display.brewer.all(type = "qual")
mycolor <- brewer.pal(n=9,name="set1")
mycolor <- brewer.pal(n=9,name="Set1")
wordcloud(words = word, freq = count, random.order = F, colors = mycolor,scale=c(7,0,3))
sampledata <- comments[1:10000]
data_list = list() # 댓글을 분리하면 분리된 명사의 갯수가 다르므로 리스트를 이용해야 한다.
for(i in 1:length(sampledata)){
data <- SimplePos09(sampledata[i])
data_list[[i]] <- data
}
head(data_list,20)
#/로 분할 - 리스트의 모든 요소에 저장된 문자열을 /로 분리 => N이 있는 문자열의 첫번재 요소 가져오기
# sapply를 이용하면 반복작업을 할 수 있다.
class(data_list)
# class를 unlist로 변환함
class(unlist(data_list))
wordlist <- sapply(str_split(data_list,"/"), function(x){
x[1]
})
wordlist <- gsub("(.*\\\")","",wordlist)
class(wordlist)
head(wordlist,10)
#table함수를 이용해서 단어의 빈도수 구하기
tablewordlist <- table(wordlist)
tablewordlist[1]
tablewordlist[89]
names(tablewordlist)
sort(tablewordlist,decreasing = T)[1:100]
nchar("글자수")
tablewordlist_result <- tablewordlist[nchar(names(tablewordlist))>1]
tablewordlist_result <- sort(tablewordlist_result,decreasing = T)
tablewordlist_result
#RColorBrewer
display.brewer.all(type = "div")
display.brewer.all(type = "qual")
display.brewer.all(type = "seq")
word <- names(tablewordlist_result)
count <- as.numeric(tablewordlist_result)
mycolor <- brewer.pal(n=9,name="Set1")
wordcloud(words = word, freq = count, random.order = F, colors = mycolor,scale=c(7,0,3))
sampledata <- comments[1:10000]
data_list = list() # 댓글을 분리하면 분리된 명사의 갯수가 다르므로 리스트를 이용해야 한다.
for(i in 1:length(sampledata)){
data <- SimplePos09(sampledata[i])
data_list[[i]] <- data
}
head(data_list,20)
sampledata <- comments[1:5000]
load("C:/iot/work/bigdata/Rwork/bigdata/comments.RData")
load("C:/iot/work/bigdata/Rwork/bigdata/score.RData")
sampledata <- comments[1:5000]
data_list = list() # 댓글을 분리하면 분리된 명사의 갯수가 다르므로 리스트를 이용해야 한다.
for(i in 1:length(sampledata)){
data <- SimplePos09(sampledata[i])
data_list[[i]] <- data
}
wordlist <- sapply(str_split(data_list,"/"), function(x){
x[1]
})
wordlist <- gsub("(.*\\\")","",wordlist)
head(wordlist,10)
#table함수를 이용해서 단어의 빈도수 구하기
tablewordlist <- table(wordlist)
tablewordlist[1]
tablewordlist[89]
names(tablewordlist)
sort(tablewordlist,decreasing = T)[1:100]
nchar("글자수")
tablewordlist_result <- tablewordlist[nchar(names(tablewordlist))>1]
tablewordlist_result <- sort(tablewordlist_result,decreasing = T)
tablewordlist_result
word <- names(tablewordlist_result)
count <- as.numeric(tablewordlist_result)
mycolor <- brewer.pal(n=9,name="Set1")
wordcloud(words = word, freq = count, random.order = F, colors = mycolor,scale=c(7,0,3))
