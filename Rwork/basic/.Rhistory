mymat1
rownames(mymat1) <- c("r1","r2","r3","r4","r5")
mymat1
mean(mymat1[a])
mean(mymat1[a,])
mean(mymat1["a"])
mean(mymat1["r1"])
score <- matrix(ncol=4, nrow = 4)
?matrix
mean(mymat1(r1))
mean(mymat1[r1])
mean(mymat1["r1"])
mean(mymat1[,"r1"])
mean(mymat1["r1"])
mean(mymat1)
score <-(c(80,90,70,100))
score <- matrix(c(80,90,70,100))
score <- matrix(ncol=4, nrow = 4)
score <- matrix(c(80,90,70,100))
score <- matrix(c(80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90)ncol=4, nrow = 4)
score <- matrix(c(80,90,70,100,80,99,78,72,90,78,82,78,99,89,78,90), ncol=4, nrow = 4)
score
colnames(score) <- c("국어","영어","과학","수학")
rownames(score) <- c("kim","lee","home","jang")
score
avg_name <- mean(score[,])
avg_name
avg_name <- mean(score[1:4,])
avg_name
avg_name <- mean(score[1,1:4])
avg_name
avg_name <- mean(score[1:4,1:4])
avg_name
score <- matrix(c(c(80,90,70,100),c(80,99,78,72),c(90,78,82,78),c(99,89,78,90)), ncol=4, nrow = 4)
score
colnames(score) <- c("국어","영어","과학","수학")
rownames(score) <- c("kim","lee","home","jang")
score
avg_name <- mean(score[1:4,1])
avg_name
avg_name <- matrix(c(mean(score[1:4,1])),mean(score[1:4,2]),mean(score[1:4,3]),mean(score[1:4,4]))
avg_name
avg_name <- matrix(c(mean(score[1:4,])))
avg_name
avg_name <- matrix(c(mean(score[1:4,1])))
avg_name
avg_name <- matrix(c(mean(score[1:4,1])),c(mean(score[1:4,1])))
avg_name
avg_name <- matrix(c(c(mean(score[1:4,1])),c(mean(score[1:4,1]))))
avg_name
avg_name <- matrix(c(c (mean(score[1:4,1])),(mean(score[1:4,1])),(mean(score[1:4,1])),c(mean(score[1:4,1])) ))
avg_name <- matrix(c(c (mean(score[1:4,1])),(mean(score[1:4,1])),(mean(score[1:4,1])),c(mean(score[1:4,1])) ))
avg_name
avg_name <- matrix(c(c (mean(score[1:4,1])),(mean(score[1:4,1])),(mean(score[1:4,1])),c(mean(score[1:4,1])) ) ncol=1)
avg_name
avg_name <- matrix(c(c (mean(score[1:4,1])),(mean(score[1:4,1])),(mean(score[1:4,1])),c(mean(score[1:4,1])) ), ncol=1)
avg_name
avg_name <- matrix(c(c (mean(score[1:4,1])),(mean(score[1:4,1])),(mean(score[1:4,1])),c(mean(score[1:4,1])) ), nrow=1)
avg_name
avg_name <- matrix(c(c (mean(score[1:4,1])),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
avg_name
?mean
avg_name <- matrix(c(c(mean(score[1:4,1],2)),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
avg_name
avg_name <- matrix(c(c(mean(score[1:4,1],2)),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
avg_name
avg_name <- matrix(c(c(mean(score[1:4,1],trim=0.10)),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
avg_name
avg_name <- matrix(c(c(mean(score[1:4,1],trim=0.001)),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
avg_name
avg_name <- matrix(c(c(mean(score[1:4,1])),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
avg_name
score <- matrix(c(c(80,90,70,100),c(80,99,78,72),c(90,78,82,78),c(99,89,78,90)), ncol=4, nrow = 4)
score
colnames(score) <- c("국어","영어","과학","수학")
rownames(score) <- c("kim","lee","home","jang")
score
avg_name <- matrix(c(c(mean(score[1:4,1])),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
avg_name
avg_subject <- matrix(c(c(mean(score[1,1:4])),(mean(score[2,1:4])),(mean(score[3,1:4])),c(mean(score[3,1:4])) ), nrow=1)
avg_subject
colnames(avg_subject) <- c("국어","영어","과학","수학")
score <- matrix(c(c(80,90,70,100),c(80,99,78,72),c(90,78,82,78),c(99,89,78,90)), ncol=4, nrow = 4)
score
colnames(score) <- c("국어","영어","과학","수학")
rownames(score) <- c("kim","lee","home","jang")
score
avg_name <- matrix(c(c(mean(score[1:4,1])),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
colnames(avg_name) <- c("kim","lee","home","jang")
avg_name
avg_subject <- matrix(c(c(mean(score[1,1:4])),(mean(score[2,1:4])),(mean(score[3,1:4])),c(mean(score[3,1:4])) ), nrow=1)
colnames(avg_subject) <- c("국어","영어","과학","수학")
avg_subject
score <- matrix(c(c(80,90,70,100),c(80,99,78,72),c(90,78,82,78),c(99,89,78,90)), ncol=4, nrow = 4)
score
colnames(score) <- c("국어","영어","과학","수학")
rownames(score) <- c("kim","lee","home","jang")
score
avg_name <- matrix(c(c(mean(score[1:4,1])),(mean(score[1:4,2])),(mean(score[1:4,3])),c(mean(score[1:4,4])) ), nrow=1)
rownames(avg_name) <- "avg_name"
colnames(avg_name) <- c("kim","lee","home","jang")
avg_name
avg_subject <- matrix(c(c(mean(score[1,1:4])),(mean(score[2,1:4])),(mean(score[3,1:4])),c(mean(score[3,1:4])) ), nrow=1)
rownames(avg_subject) <- "avg_subject"
colnames(avg_subject) <- c("국어","영어","과학","수학")
avg_subject
?float
?double
?presision
double(1)
double(1)
double(2)
double(length=1)
double(1.1)
numeric(1,length = 2)
numeric(1)
numeric(1)
print.numeric_version(1)
print.numeric_version(2)
print.numeric_version(12)
avg_name <- rowMeans(score)
rownames(avg_name) <- "avg_name"
avg_name <- rowMeans(score)
avg_name <- rowMeans(score)
avg_name
avg_name <- colmeans(score)
avg_name
rownames(avg_name) <- "avg_name"
avg_name <- colmeans(score)
colnames(avg_name) <- c("kim","lee","home","jang")
avg_name
avg_subject <- rowmeans(score)
colnames(avg_subject) <- c("국어","영어","과학","수학")
avg_subject
avg_name <- colmeans(score)
colnames(avg_name) <- c("kim","lee","home","jang")
avg_name
avg_subject <- rowmeans(score)
avg_name <- colMeans(score)
colnames(avg_name) <- c("kim","lee","home","jang")
avg_name
avg_name <- colMeans(score)
score <- matrix(c(c(80,90,70,100),c(80,99,78,72),c(90,78,82,78),c(99,89,78,90)), ncol=4, nrow = 4)
colnames(score) <- c("국어","영어","과학","수학")
rownames(score) <- c("kim","lee","home","jang")
avg_name <- colMeans(score)
avg_name
avg_name <- colMeans(score)
avg_name
avg_subject <- rowMeans(score)
avg_subject
dataframeMat1 <- matrix(1:15,ncol=3,byrow=T)
dataframeMat1
dataframeMat2 <- data.frame(dataframeMat1)
dataframeMat1 <- matrix(1:15,ncol=3,byrow=T)
dataframeMat1
dataframeMat2 <- data.frame(dataframeMat1)
dataframeMat2
dataframeMat1[,1]
dataframeMat2 <- data.frame(dataframeMat1)
mydataframe <-data.frame(dataframeMat1)
mydataframe[,1]
mydataframe[,1] <- as.character(mydataframe[,1])
mydataframe[,1]
str(mydataframe)
# 1열만 데이터가 다르게 찍혀있는 것을 볼 수 있다.
mydataframe$X1
mydataframe$X2
mydataframe$X3
col4 <- c(1,1,1,1,1)
mydataframe$x4 <-col4
mydataframe
#필요한 곳에서 데이터프레임을 매트릭스로 변환
mydataframe  <- as.matrix(mydataframe)
mydataframe
#dataframe만들기 2- 벡터를 여러개 만들어서 dataframe을 작성
eng <- c(100,99,90)
#dataframe만들기 2- 벡터를 여러개 만들어서 dataframe을 작성
eng <- c(100,99,90)
math <- c(100,99,100)
mydf1 < data.frame(eng,math)
mydf1 < data.frame(eng,math)
mydf1 <- data.frame(eng,math)
mydf1
m <- matrix(1:15, ncol=3, byrow=T)
m
t(m)
d <- data.frame(m)
d
m <- t(m)
d <- data.frame(m)
d
product <- c("사과","가격","판매량")
price <- c(1800,1500,3000)
qty <- c(24,38,13)
market <- data.frame(product,price,qty)
market
rowMeans(market)
rowMeans(market[,2:3])
colMeans(market[,2:3])
가격","판매량")
price <- c(1800,1500,3000)
qty <- c(24,38,13)
market <- data.frame(product,price,qty)
colMeans(market[,2:3])
colMeans(market["price"])
product <- c("사과","가격","판매량")
market <- data.frame(product,price,qty)
colMeans(market[,2:3])
colMeans(market["price"])
colMeans(market["price","qty"])
colMeans(market["price","qty"])
colMeans(market[,2:3])
colMeans(market["price","qty"])
colMeans(market["price"])
colMeans(market["price"],market["qty"])
colMeans(market["price"]["qty"])
colMeans(market["price","qty"])
colMeans(market["price":"qty"])
colMeans(market["price","qty"])
colMeans(market[,"price","qty"])
colMeans(market["price"|"qty"])
colMeans(market["price"])
colMeans(market["qty"])
colMeans(market["price"])colMeans(market["qty"])
colMeans(market["price"]),colMeans(market["qty"])
colMeans(market["price"])
colMeans(market["qty"])
colMeans(market["가격"])
market
과","딸기","수박")
딸기 <- c(1800,1500,3000)
판매량 <- c(24,38,13)
market <- data.frame(product,price,qty)
market
colMeans(market[,2:3]
제품 <- c("사과","딸기","수박")
제품 <- c("사과","딸기","수박")
가격<- c(1800,1500,3000)
판매량 <- c(24,38,13)
market <- data.frame(제품,가격,판매량)
market
colMeans(market[,2:3])
colMeans(market["가격"])
colMeans(market["판매량"])
data.frame(colMeans(market["가격"]),colMeans(market["판매량"]))
colMeans(market["판매량"])
colMeans(market[판매량])
colMeans(market["판매량"])
colMeans(market["판매량,가격"])
colMeans(market["'판매량','가격'"])
colMeans(market["판매량","가격"])
market["판매량","가격"]
market["판매량""가격"]
market["판매량":"가격"]
market["판매량"]
market["판매량"]["가격"]
market["판매량"]market["가격"]
market["판매량"],market["가격"]
market["판매량"]:market["가격"]
market["판매량"] market["가격"]
colMeans(market["판매량","가격"])
colMeans(market["판매량"])
colMeans(market[,2:3])
View(market)
View(market)
View(market)
num <- 88
in(num>=90){
print("합격")
}else{
print("불합격")
}
num <- 88
in(num>=90){
print("합격")
}else{
print("불합격")
}
num <- 88
if(num>=90){
print("합격")
}else{
print("불합격")
}
num <- 88
if(num>=90){
print("합격")
}else{
print("불합격")
}
myv <- c(1:10)
for(i in myv){
print(i)
}
myv <- c("1","2","3")
for(i in myv){
print(i)
}
myv <- c(1:10)
for(i in myv){
print(i)
}
sum=0
myv < c(1:10)
for(i in myv){
sum += i
}
print(sum)
for(i in myv){
sum = sum + i
}
print(sum)
num <- 88
if(num>=90){
print("합격")
}else{
print("불합격")
}
myv <- c(1:10)
for(i in myv){
print(i)
}
# 1부터 10까지 합 구하기
sum=0
myv <- c(1:10)
for(i in myv){
sum = sum + i
}
print(sum)
sum(myv)
df_csv_exam <- read.csv("csv_exam.csv")
df_csv_exam
mdf = data.frame(df_csv_exam)
mdf
className(df_csv_exam)
mdf <- read.csv("csv_exam.csv")
mdf
mdf
grouping(mdf)
grouping(mdf$class)
mdf
grouping(mdf$class)
grouping(mdf$"class")
m <- matrix(1:20,ncol =4)
m
d <-data.frame(m)
d
myresult <- d[,]
myresult <- d[x3,]
myresult <- d[d$x3,]
myre
myresult
myresult <- d[d$x3>=13,]
myresult <- d[d$x3>=13,]
myresult
myresult <- d[d$x3>=13,]
myresult
View(myresult)
View(myresult)
View(d)
d <-data.frame(m)
d
myresult <- d[d$x3>=13,]
myresult
write.csv(myre)
d <-data.frame(m)
d
myresult <- d[d$x3>=13,]
myresult
myresult <- d[d$x3>=13,]
myresult
m <- matrix(1:20,ncol =4)
m
d <-data.frame(m)
d
myresult <- d[d$x3>=13,]
myresult
myresult <- d[,d$x3>=13]
myresult
myresult
View(mdf)
View(myresult)
View(myresult)
View(myresult)
View(myresult)
View(mdf)
View(myresult)
myresult <- d[,d$x3>=13]
myresult
myresult <- d[d$x3>=13]
myresult
myresult
m <- matrix(1:20,ncol =4)
m
d <-data.frame(m)
d
myresult <- d[d$x3>=13]
myresult
myresult <- d[d$x3>=13,]
myresult
myresult <- d[d$x3 >= 13,]
myresult
myresult <- d[d$x3 >= 13,]
myresult <- d[d$X3 >= 13,]
myresult
write.csv(myresult,file="result.csv")
mdf <- read.csv("csv_exam.csv")
mdf
temp <- mdf[mdf$science>=80,]
temp
mytotal = rowMeans([3:5])
mytotal = rowMeans(3:5)
mytotal = rowMeans(mdf[3:5])
mytotal
mytotal = rowMeans(temp[3:5])
mytotal
temp <- temp[mytotal]
temp
temp <- temp[temp,mytotal]
temp <- data.frame[temp,mytotal]
temp <- data.frame[mytotal]
mytotal
temp
data.frame[mytotal]
data.frame(mytotal)
data.frame(temp,mytotal)
mytotal = rowsum(temp[3:5])
mytotal = rowsum(temp[3:5])
mytotal
mytotal = sum(temp[3:5])
mytotal
mytotal = sum(temp$math,temp$english,temp$science)
mytotal
mytotal = rowSums(temp[3:5])
mytotal
data.frame(temp,mytotal,myavg)
mdf <- read.csv("csv_exam.csv")
mdf
temp <- mdf[mdf$science>=80,]
mytotal = rowSums(temp[3:5])
myavg = rowMeans(temp[3:5])
data.frame(temp,mytotal,myavg)
temp
temp <- data.frame(temp,mytotal,myavg)
temp
mdf <- read.csv("csv_exam.csv")
temp <- mdf[mdf$science>=80,]
mytotal = rowSums(temp[3:5])
myavg = rowMeans(temp[3:5])
temp <- data.frame(temp,mytotal,myavg)
temp
myavg = round(rowMeans(temp[3:5]),2)
temp <- data.frame(temp,mytotal,myavg)
temp
#csv_exam.csv를 읽어서 데이터를 수정한 후
#csv_exam_result.csv
# - sicence가 80이상인 데이터를 추출
# - 추출된 데이터에 mytotal과 myavg컬럼을 추가
# - mytotal : 모든 과목의 총점
# - myavg : 모든 과목의 평균
mdf <- read.csv("csv_exam.csv")
temp <- mdf[mdf$science>=80,]
mytotal = rowSums(temp[3:5])
myavg = round(rowMeans(temp[3:5]),2)
temp <- data.frame(temp,mytotal,myavg)
temp
mytotal
mytotal$math
temp$math
c(temp$math)
c(temp$math)+c(temp$english)+c(temp$science)
t(c)
m <-c(temp$math)+c(temp$english)+c(temp$science)
t(m)
data.frame(temp,m)
myavg <-c(temp$math)+c(temp$english)+c(temp$science)/3
#myavg = round(rowMeans(temp[3:5]),2)
temp <- data.frame(temp,mytotal,myavg)
temp
#csv_exam.csv를 읽어서 데이터를 수정한 후
#csv_exam_result.csv
# - sicence가 80이상인 데이터를 추출
# - 추출된 데이터에 mytotal과 myavg컬럼을 추가
# - mytotal : 모든 과목의 총점
# - myavg : 모든 과목의 평균
mdf <- read.csv("csv_exam.csv")
temp <- mdf[mdf$science>=80,]
#mytotal = rowSums(temp[3:5])
mytotal <-c(temp$math)+c(temp$english)+c(temp$science)
myavg <-c(temp$math)+c(temp$english)+c(temp$science)/3
#myavg = round(rowMeans(temp[3:5]),2)
temp <- data.frame(temp,mytotal,myavg)
temp
myavg <-(c(temp$math)+c(temp$english)+c(temp$science))/3
#myavg = round(rowMeans(temp[3:5]),2)
temp <- data.frame(temp,mytotal,myavg)
temp
#csv_exam.csv를 읽어서 데이터를 수정한 후
#csv_exam_result.csv
# - sicence가 80이상인 데이터를 추출
# - 추출된 데이터에 mytotal과 myavg컬럼을 추가
# - mytotal : 모든 과목의 총점
# - myavg : 모든 과목의 평균
mdf <- read.csv("csv_exam.csv")
temp <- mdf[mdf$science>=80,]
#mytotal = rowSums(temp[3:5])
mytotal <-c(temp$math)+c(temp$english)+c(temp$science)
myavg <-round((c(temp$math)+c(temp$english)+c(temp$science))/3,2)
#myavg = round(rowMeans(temp[3:5]),2)
temp <- data.frame(temp,mytotal,myavg)
temp
